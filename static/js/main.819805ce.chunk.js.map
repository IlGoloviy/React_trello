{"version":3,"sources":["actions/actionAuth.js","actions/actionWithTasks.js","components/Task.jsx","components/AddTask.jsx","components/Column.jsx","components/App.js","reducers/index.js","reducers/tasksReducer.js","store.js","index.js"],"names":["reloadToken","token","localStorage","getItem","data","axios","defaults","headers","common","post","then","res","setItem","getData","type","payload","method","url","auth","username","password","tasks","OnHold","filter","task","row","InProgress","NeedsReview","Approved","addTasks","body","moveTaskInColumn","toUpperCase","updateTask","id","patch","DivTask","styled","div","BtnCansel","button","Text","p","Span","span","connect","state","props","deleteBlock","dispatch","delete","draggableId","index","provided","draggableProps","dragHandleProps","ref","innerRef","onClick","text","AddCardBtn","h5","AddCardDiv","AddCardButtons","AddCardText","textarea","AddCardBtnSaved","AddCardBtnCansel","AddTask","add","createRef","addTask","bind","savedTask","this","setState","current","value","rows","placeholder","React","Component","Column","ColumnContent","ColumnDescription","h2","color","Columns","nameColumn","idColumn","background","length","map","i","key","droppableId","droppableProps","Container","App","onDragEnd","result","destination","source","slice","Number","taskMoved","splice","forEach","seq_num","startColumn","finishColumn","arr","combineReducers","action","middlewares","applyMiddleware","promise","thunk","createLogger","createStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.819805ce.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport function setToken() {\r\n  axios.defaults.headers.post['Content-Type'] = 'application/json';\r\n  axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/users/login/', {\r\n    \"username\": \"illia\",\r\n    \"password\": \"12qwasaszx\"\r\n  }).then(res => {\r\n    const { token } = res.data;\r\n    localStorage.setItem('token', token);\r\n  })\r\n}\r\n\r\nexport function reloadToken() {\r\n  const token = localStorage.getItem('token');\r\n  const data = {\r\n    token\r\n  }\r\n  axios.defaults.headers.common['Authorization'] =  'JWT ' + token;\r\n  axios.post(`https://trello.backend.tests.nekidaem.ru/api/v1/users/refresh_token/`, data)\r\n    .then(res => localStorage.setItem('token', res.data.token))\r\n}","import axios from 'axios';\r\nimport { reloadToken } from './actionAuth';\r\n\r\nconst token = localStorage.getItem('token');\r\naxios.defaults.headers.common['Authorization'] =  'JWT ' + token;\r\n\r\nexport function getData() {\r\n  return {\r\n    type: 'GET_DATA',\r\n    payload: \r\n      axios({\r\n        method:'get',\r\n        url:'https://trello.backend.tests.nekidaem.ru/api/v1/cards/',\r\n        auth: {\r\n          username: 'illia',\r\n          password: '12qwasaszx'\r\n        }\r\n      }).then(res => {\r\n        const tasks = res.data;\r\n        const data = {\r\n          tasks,\r\n          OnHold: tasks.filter(task => task.row === '0'),\r\n          InProgress: tasks.filter(task => task.row === '1'),\r\n          NeedsReview: tasks.filter(task => task.row === '2'),\r\n          Approved: tasks.filter(task => task.row === '3')\r\n        }\r\n        return data;\r\n      })\r\n  }\r\n}\r\n\r\nexport function addTasks(body, type) {\r\n  reloadToken();\r\n  return {\r\n    type,\r\n    payload: \r\n      axios.post('https://trello.backend.tests.nekidaem.ru/api/v1/cards/', body)\r\n      .then(res => res.data)\r\n  }\r\n}\r\n\r\nexport function deleteTask(id) {\r\n  reloadToken();\r\n  return {\r\n    type: 'DELETE_TASK',\r\n    payload:\r\n      axios.delete(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`)\r\n      .then(() => id)\r\n  }\r\n}\r\n\r\nexport function moveTaskInColumn(tasks, type) {\r\n  reloadToken();\r\n  return {\r\n    type: `MOVED_TASK_${type.toUpperCase()}`,\r\n    payload: tasks\r\n  }\r\n}\r\n\r\nexport function updateTask(body, id) {\r\n  return {\r\n    type: 'UPDATE_TASK',\r\n    payload: \r\n      axios.patch(`https://trello.backend.tests.nekidaem.ru/api/v1/cards/${id}/`, body)\r\n      .then(res => res.data)\r\n  }\r\n}","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteTask } from '../actions/actionWithTasks';\r\n\r\nconst DivTask = styled.div`\r\n  background: #191a1d;\r\n  padding: 0 0 5px 10px;\r\n  margin-bottom: 10px;\r\n  cursor: move;\r\n`;\r\nconst BtnCansel = styled.button`\r\n  transform: rotate(45deg);\r\n  background: rgba(0,0,0,0);\r\n  border: none;\r\n  color: #a2a5ad;\r\n  text-align: right;\r\n  font-size: 24px;\r\n  padding: 0;\r\n  margin-left: 250px;\r\n  cursor: pointer;\r\n  :focus { outline: none; }\r\n  @media (max-width: 1300px) {\r\n    margin-left: 200px;\r\n  }\r\n  @media (max-width: 1100px) {\r\n    margin-left: 150px;\r\n  }\r\n  @media (max-width: 950px) {\r\n    margin-left: 250px;\r\n  }\r\n`;\r\nconst Text = styled.p`\r\n  margin: 0;\r\n  color: #a2a5ad;\r\n  padding-bottom: 15px;\r\n`;\r\nconst Span = styled.span`\r\n  color: #fff;\r\n`;\r\n\r\nconst Task = (props) => {\r\n  const { task } = props;\r\n\r\n  const deleteBlock = () => {\r\n    props.dispatch(deleteTask(task.id));\r\n  }\r\n  \r\n  return (\r\n    <Draggable draggableId={`${task.id}`} index={props.index}>\r\n      {provided => (\r\n        <DivTask \r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <BtnCansel onClick={deleteBlock}>+</BtnCansel>\r\n          <Text><Span>id:</Span> {task.id}</Text>\r\n          <Text>{task.text}</Text>\r\n        </DivTask>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Task);","import React, { createRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTasks } from '../actions/actionWithTasks';\r\n\r\nconst AddCardBtn = styled.h5`\r\n  margin: 0;\r\n  color: #717580;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  :hover {\r\n    background: #191a1d;\r\n  }\r\n`;\r\nconst AddCardDiv = styled.div`\r\n  padding: 10px;\r\n`;\r\nconst AddCardButtons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 6px;\r\n`;\r\nconst AddCardText = styled.textarea`\r\n  width: 100%;\r\n  background: #575a63;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  padding: 15px;\r\n  color: #a2a5ad;\r\n  font-size: 14px;\r\n  resize: none;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst AddCardBtnSaved = styled.button`\r\n  border: none;\r\n  background: #575a63;\r\n  color: #a2a5ad;\r\n  font-size: 16px;\r\n  padding: 5px 15px;\r\n  cursor: pointer;\r\n`;\r\nconst AddCardBtnCansel = styled.button`\r\n  margin-left: 5px;\r\n  background: inherit;\r\n  border: none;\r\n  transform: rotate(45deg);\r\n  color: #a2a5ad;\r\n  font-size: 34px;\r\n  cursor: pointer;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nclass AddTask extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      add: false\r\n    }\r\n    this.text = createRef();\r\n\r\n    this.addTask = this.addTask.bind(this);\r\n    this.savedTask = this.savedTask.bind(this);\r\n  }\r\n\r\n  addTask() {\r\n    this.setState({add: !this.state.add});\r\n  }\r\n\r\n  savedTask() {\r\n    const task = {\r\n      row: this.props.props,\r\n      text: this.text.current.value\r\n    }\r\n    switch (this.props.props) {\r\n      case '0': {\r\n        this.props.dispatch(addTasks(task, 'ADD_TASK_ON-HOLD'));\r\n        break;\r\n      }\r\n      case '1': {\r\n        this.props.dispatch(addTasks(task, 'ADD_TASK_IN-PROGRESS'));\r\n        break;\r\n      }\r\n      case '2': {\r\n        this.props.dispatch(addTasks(task, 'ADD_TASK_NEEDS-REVIEW'));\r\n        break;\r\n      }\r\n      case '3': {\r\n        this.props.dispatch(addTasks(task, 'ADD_TASK_APPROVED'));\r\n        break;\r\n      }\r\n      default: break; \r\n    }\r\n    \r\n    this.setState({add: !this.state.add});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.add) {\r\n      return (\r\n        <AddCardDiv>\r\n          <AddCardText ref={this.text} rows=\"4\" placeholder=\"Ввести заголовок для этой карточки\"></AddCardText>\r\n          <AddCardButtons>\r\n            <AddCardBtnSaved onClick={this.savedTask}>Добавить карточку</AddCardBtnSaved>\r\n            <AddCardBtnCansel onClick={this.addTask}>+</AddCardBtnCansel>\r\n          </AddCardButtons>\r\n        </AddCardDiv>\r\n      )\r\n    } else {\r\n      return (\r\n        <AddCardBtn onClick={this.addTask}>+ Добавить карточку</AddCardBtn>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddTask);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\n\r\nimport Task from './Task';\r\nimport AddTask from './AddTask';\r\n\r\nconst Column = styled.div`\r\n  background: #292b31;\r\n  color: #fff;\r\n  width: 300px;\r\n  margin: 50px 15px;\r\n  @media (max-width: 1300px) {\r\n    width: 250px;\r\n  }\r\n  @media (max-width: 1100px) {\r\n    width: 200px;\r\n  }\r\n  @media (max-width: 950px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nconst ColumnContent = styled.div`\r\n  padding: 10px;\r\n  padding-bottom: 0;\r\n`;\r\nconst ColumnDescription = styled.h2`\r\n  margin: 0;\r\n  padding: 10px;\r\n  text-transform: uppercase;\r\n  background: ${props => props.color};\r\n  @media (max-width: 1100px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nclass Columns extends React.Component {\r\n    render() {\r\n      let tasks;\r\n      const { nameColumn, idColumn, background } = this.props.props;\r\n  \r\n      if (this.props[nameColumn].length) {\r\n        tasks = this.props[nameColumn].map((task, i) => {\r\n          return <Task task={task} key={task.id} index={i}/>\r\n        })\r\n      } else {\r\n        tasks = false;\r\n      }\r\n  \r\n      return (\r\n        <Column>\r\n          <ColumnDescription color={background}>on-hold ({this.props[nameColumn].length})</ColumnDescription>\r\n          <Droppable droppableId={nameColumn}>\r\n            {provided => (\r\n              <ColumnContent\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                {tasks}\r\n                {provided.placeholder}\r\n              </ColumnContent>\r\n            )}\r\n          </Droppable>\r\n          <AddTask props={idColumn} />\r\n        </Column>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function mapStateToProps(state) {\r\n    return {\r\n      OnHold: state.tasks.OnHold,\r\n      InProgress: state.tasks.InProgress,\r\n      NeedsReview: state.tasks.NeedsReview,\r\n      Approved: state.tasks.Approved\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(Columns);","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\n\nimport Column from './Column';\n\nimport { setToken } from '../actions/actionAuth';\nimport { getData, moveTaskInColumn, updateTask } from '../actions/actionWithTasks';\nimport { connect } from 'react-redux';\n\nconst Container = styled.div`\n  background: #33363d;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  @media (max-width: 950px) {\n    padding: 0 15px;\n    box-sizing: border-box;\n    flex-wrap: wrap;\n  }\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    const { destination, source, draggableId } = result;\n\n    if(!destination) {\n      return;\n    }\n\n    if(\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const tasks = this.props.tasks[source.droppableId].slice();\n      const [ taskMoved ] = tasks.filter(task => {\n        return task.id === Number(draggableId);\n      });\n      tasks.splice(source.index, 1);\n      tasks.splice(destination.index, 0, taskMoved);\n      tasks.forEach((task, i) => task.seq_num = i);\n  \n      this.props.dispatch(moveTaskInColumn(tasks, source.droppableId));\n      tasks.forEach(task => {\n        const body = {\n          row: task.row,\n          seq_num: task.seq_num,\n          text: task.text\n        }\n        this.props.dispatch(updateTask(body, task.id));\n      });\n      return;\n    }\n\n    const startColumn = this.props.tasks[source.droppableId].slice();\n    const finishColumn = this.props.tasks[destination.droppableId].slice();\n    const [ taskMoved ] = startColumn.filter(task => {\n      return task.id === Number(draggableId);\n    });\n    startColumn.splice(source.index, 1);\n    finishColumn.splice(destination.index, 0, taskMoved);\n    finishColumn.forEach((task, i) => {\n      task.seq_num = i;\n      const arr = ['OnHold', 'InProgress', 'NeedsReview', 'Approved'];\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === destination.droppableId) {\n          task.row = i;\n        }\n      }\n    });\n\n    this.props.dispatch(moveTaskInColumn(startColumn, source.droppableId));\n    this.props.dispatch(moveTaskInColumn(finishColumn, destination.droppableId));\n    finishColumn.forEach(task => {\n      const body = {\n        row: task.row,\n        seq_num: task.seq_num,\n        text: task.text\n      }\n      this.props.dispatch(updateTask(body, task.id));\n    });\n  }\n\n  render() {\n    const OnHold = {\n      nameColumn: 'OnHold',\n      idColumn: '0',\n      background: '#fb7e46'\n    }\n    const InProgress = {\n      nameColumn: 'InProgress',\n      idColumn: '1',\n      background: '#2a92bf'\n    }\n    const NeedsReview = {\n      nameColumn: 'NeedsReview',\n      idColumn: '2',\n      background: '#f4ce46'\n    }\n    const Approved = {\n      nameColumn: 'Approved',\n      idColumn: '3',\n      background: '#00b961'\n    }\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Container>\n          <Column props={OnHold} />\n          <Column props={InProgress} />\n          <Column props={NeedsReview} />\n          <Column props={Approved} />\n        </Container>\n      </DragDropContext>\n    );\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('token')) {\n      this.props.dispatch(getData())\n    } else {\n      setToken()\n      this.props.dispatch(getData())\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\n\r\nimport tasks from './tasksReducer';\r\n\r\nexport default combineReducers({\r\n  tasks\r\n})","export default function reducer(state = {\r\n    tasks: [],\r\n    OnHold: [],\r\n    InProgress: [],\r\n    NeedsReview: [],\r\n    Approved: [],\r\n  }, action) {\r\n  \r\n    switch (action.type) {\r\n      case 'GET_DATA_FULFILLED': {\r\n        return {\r\n          ...action.payload\r\n        }\r\n      }\r\n      case 'ADD_TASK_ON-HOLD_FULFILLED': {\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, action.payload],\r\n          OnHold: [...state.OnHold, action.payload]\r\n        }\r\n      }\r\n      case 'ADD_TASK_IN-PROGRESS_FULFILLED': {\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, action.payload],\r\n          InProgress: [...state.InProgress, action.payload]\r\n        }\r\n      }\r\n      case 'ADD_TASK_NEEDS-REVIEW_FULFILLED': {\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, action.payload],\r\n          NeedsReview: [...state.NeedsReview, action.payload]\r\n        }\r\n      }\r\n      case 'ADD_TASK_APPROVED_FULFILLED': {\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, action.payload],\r\n          Approved: [...state.Approved, action.payload]\r\n        }\r\n      }\r\n      case 'DELETE_TASK_FULFILLED': {\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.filter(task => task.id !== action.payload),\r\n          OnHold: state.OnHold.filter(task => task.id !== action.payload),\r\n          InProgress: state.InProgress.filter(task => task.id !== action.payload),\r\n          NeedsReview: state.NeedsReview.filter(task => task.id !== action.payload),\r\n          Approved: state.Approved.filter(task => task.id !== action.payload)\r\n        }\r\n      }\r\n      case 'MOVED_TASK_ONHOLD': {\r\n        return {\r\n          ...state,\r\n          OnHold: action.payload\r\n        }\r\n      }\r\n      case 'MOVED_TASK_INPROGRESS': {\r\n        return {\r\n          ...state,\r\n          InProgress: action.payload\r\n        }\r\n      }\r\n      case 'MOVED_TASK_NEEDSREVIEW': {\r\n        return {\r\n          ...state,\r\n          NeedsReview: action.payload\r\n        }\r\n      }\r\n      case 'MOVED_TASK_APPROVED': {\r\n        return {\r\n          ...state,\r\n          Approved: action.payload\r\n        }\r\n      }\r\n      case 'UPDATE_TASK_FULFILLED': {\r\n        state.tasks = state.tasks.filter(task => task.id !== action.payload.id);\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, action.payload]\r\n        }\r\n      }\r\n\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  }","import { applyMiddleware, createStore } from 'redux';\r\n\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst middlewares = applyMiddleware(promise, thunk, createLogger());\r\n\r\nexport default createStore(reducer, middlewares);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}